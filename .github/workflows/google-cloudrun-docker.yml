
name: Build and Deploy to Cloud Run

on:
  push:
    branches: [ "master", "feature/GEM-5-firebase-deploy" ]

env:
  PROJECT_ID: gems-gemini-api-competition #  Google Cloud project id
  GAR_LOCATION: asia-northeast3 # Artifact Registry location
  REPOSITORY: cloud-run-source-deploy # Artifact Registry repository name
  SERVICE: gem-api # Cloud Run service name
  REGION: asia-northeast3 # Cloud Run service region

jobs:
  deploy:
    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # authentication via credentials json
      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      # BEGIN - Docker auth and build (NOTE: If you already have a container image, these Docker steps can be omitted)

      # Authenticate Docker to Google Cloud Artifact Registry
      - name: Configure Docker for Google Artifact Registry
        run: |-
          gcloud auth configure-docker ${{env.GAR_LOCATION}}-docker.pkg.dev

      - name: Create Firebase service account file
        id: create-json
        uses: jsdaniell/create-json@1.1.2
        with:
          name: "firebase-service-account.json"
          json: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}

      - name: Build and Push Container
        run: |-
          IMAGE_NAME="${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}"
          docker build -t $IMAGE_NAME ./
          docker push $IMAGE_NAME
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV

      - name: Deploy to Cloud Run
        env:
          GEMINI_PROJECT_ID: ${{ secrets.GEMINI_PROJECT_ID }}
          GEMINI_LOCATION: ${{ secrets.GEMINI_LOCATION }}
          FIREBASE_CONFIG_PATH: /app/firebase-service-account.json
        run: |-
          gcloud run deploy ${{ env.SERVICE }} --image $IMAGE_NAME \
          --platform managed \
          --region ${{ env.REGION }} \
          --allow-unauthenticated \
          --set-env-vars GEMINI_PROJECT_ID=${{ secrets.GEMINI_PROJECT_ID }},GEMINI_LOCATION=${{ secrets.GEMINI_LOCATION }},FIREBASE_CONFIG_PATH=$FIREBASE_CONFIG_PATH

      # If required, use the Cloud Run url output in later steps
      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}